<?php
namespace BetoGaizinTheme\Http\Controllers;
use Illuminate\Support\Facades\DB;
use Illuminate\Http\Request;
use Validator;
use Illuminate\Support\Str;
class CategoryController extends \Zoe\Http\ControllerFront
{
    public $config_language = [];
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->config_language = app()->config_language;

    }
    public function getList(Request $request){
        $data = $request->route()->defaults;
        $theme = config_get('theme', "active");
        return $this->render('page.list',['view'=>"$theme::pages.".$data['router']]);
    }

    public function get_blog_item($slug){

        $config_language = app()->config_language;
        $result = [];
        $tags = [];
        if(isset($config_language['lang'])){

            $db = DB::table('blog_post_translation')->where('slug',$slug)->where('lang_code',$config_language['lang'])->get()->all();

            if(count($db) > 0){
                $results = DB::table('blog_post')->where('id',$db[0]->_id)->get()->all();

                if(isset($results[0])){
                    $result = $results[0];
                    $result->title = $db[0]->title;
                    $result->content = $db[0]->content;
                    $result->slug = $db[0]->content;

                    $this->addDataGlobal("Blog-featured-title",$result->title);
                }
                $results_tag = DB::table('tag_item')->where('item_id',$db[0]->_id)->get()->keyBy('tag_id')->all();
                $tag_keys = array_keys($results_tag);

                if(isset($tag_keys[0])){
                    $tags =  DB::table('tag')->whereIn('id',$tag_keys)->get()->all();
                }
            }
        }
        return $this->render('category.blog-item',['result'=>$result,'url'=>url()->current(),'tags'=>$tags]);
    }
    public function get_list_blog_category(Request $request){

        $data = $request->route()->defaults;

        if(isset($this->config_language['lang'])){

            $results = DB::table('categories_translation')
                ->where('_id',$data['id'])
                ->where('lang_code',$this->config_language['lang'])
                ->get()
                ->all();
            $this->addDataGlobal("Blog-featured-style",2);
            $this->addDataGlobal("Blog-featured-background",'theme/missterry/images/IMG_2769-1.jpg');
            $this->addDataGlobal("Blog-featured-title",$results[0]->name);

            $models = DB::table('blog_post')->where('blog_post.category_id',$results[0]->_id);
            $models->join('blog_post_translation as rt', 'rt._id', '=', 'blog_post.id');
            $models->where('lang_code',$this->config_language['lang']);

            $total_records = $models->count();

            $current_page = isset($_GET['page']) ? $_GET['page'] : 1;
            $limit = 4;
            $total_page = ceil($total_records / $limit);
            if ($current_page > $total_page){
                $current_page = $total_page;
            }
            else if ($current_page < 1){
                $current_page = 1;
            }
            $start = ($current_page - 1) * $limit;
            $results = $models->offset($start)->limit($limit)->get()->all();
            $view = isset($data['_category_view'])?$data['_category_view']:'category.blog-list';

            return $this->render($view,[
                'results'=>$results,
                'router_item'=>'category_item:'.$data['router'],
                'pagination'=>[
                    'current_page'=>$current_page,
                    'total_page'=>$total_page,
                ]
            ]);

        }
    }
}